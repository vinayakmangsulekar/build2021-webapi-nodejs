name: Build and Release

on:
  # Enable manual trigger
  workflow_dispatch:
  # Triggers on push to the following paths
  push:
    branches:
      - main
    paths:
        # Any change to code, infra as code and configuration
      - "deploy/**"
      - "services/**"
        # Changes to the workflow
      - ".github/workflows/build_release.yaml"

jobs:
  
  # Build and tests the webapi
  build_webapi:
    name: "Build WebAPI"
    runs-on: ubuntu-latest

    # Creating a postgres database container for integration tests
    services:
      db:
        image: postgres:latest
        volumes:
          - postgres-data:/var/lib/postgresql/data
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Install Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

        # Building the app, and seeds the database for testing
      - name: Install node modules
        run: npm install --prefix services/webapi

      - name: Build the node app
        run: npm run build --prefix services/webapi

      - name: Seed DB for integration test
        run: |
         npm run migrate_db --prefix services/webapi
         npm run seed_db --prefix services/webapi
        env:
          PGHOST: localhost
          PGDB: postgres
          PGUSER: postgres
          PGPASSWORD: postgres
          NODE_ENV: development

      - name: Run tests
        run: npm run test --prefix services/webapi
        env:
          PGHOST: localhost
          PGDB: postgres
          PGUSER: postgres
          PGPASSWORD: postgres
          NODE_ENV: development

      - name: Build app for production
        run: npm ci --only=production --prefix services/webapi/

      - name: Package application
        run: npm run package --prefix services/webapi

      - name: Upload application zip package
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: ./output/app/webapi.zip
          retention-days: 7


  validate_bicep:
    name: "Validate Bicep files"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Validate that bicep builds
        run: az bicep build -f main.bicep
        working-directory: ./deploy/infra


  deploy:
    name: 'Deploy'
    needs: [validate_bicep, build_webapi]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Install yq to parse yaml file
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.5.0/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Parse config.yaml as output to GitHub Actions matrix
        run: |
          echo "config=$(yq e ./deploy/config.yaml -j -I=0)" >> $GITHUB_ENV

      - name: Write deployment information to log
        run: |
          echo "Deploying to ${{fromJson(env.config).AZURE_LOCATION }} with name prefix ${{fromJson(env.config).ENVIRONMENT_TAG }}"

      - name: Install Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

        # Building the app, as we need the compiled code to run database migration in the database as part of deployment
      - name: Install node modules
        run: npm install --prefix services/webapi

      - name: Build the node app
        run: npm run build --prefix services/webapi

      - name: Download application artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./output

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Azure subscription
        run: |
          az account set --subscription $(jq -r '.subscriptionId' <<< $CREDS)
        env:
          CREDS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run installation script to deploy
        run: >
          ./deploy/scripts/install.sh 
          --resource-name-prefix "${{fromJson(env.config).RESOURCE_NAME_PREFIX }}" 
          --environment-tag "${{fromJson(env.config).ENVIRONMENT_TAG }}" 
          --location "${{fromJson(env.config).AZURE_LOCATION }}" 
          --resource-group-tag "$GITHUB_REPOSITORY" 
          --node-env "${{fromJson(env.config).WEBAPI_NODE_ENV }}"
